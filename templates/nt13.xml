<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/bootstrap.template.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/sh_typical.min.css"?>
	
<template>
<title>杜教筛 (求 Möbius μ 函数的前缀和)</title>
<pre class="sh_sourceCode"><code class="sh_cpp">ll <span class="sh_function">calc</span><span class="sh_symbol">(</span>ll n<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
    <span class="sh_keyword">if</span><span class="sh_symbol">(</span>n <span class="sh_symbol">&lt;=</span> N<span class="sh_symbol">)</span> <span class="sh_keyword">return</span> Mu<span class="sh_symbol">[</span>n<span class="sh_symbol">];</span>
    mll<span class="sh_symbol">::</span><span class="sh_usertype">iterator</span><span class="sh_normal"> </span>it <span class="sh_symbol">=</span> f<span class="sh_symbol">.</span><span class="sh_function">find</span><span class="sh_symbol">(</span>n<span class="sh_symbol">);</span>
    <span class="sh_keyword">if</span><span class="sh_symbol">(</span>it <span class="sh_symbol">!=</span> f<span class="sh_symbol">.</span><span class="sh_function">end</span><span class="sh_symbol">())</span> <span class="sh_keyword">return</span> it<span class="sh_symbol">-&gt;</span>second<span class="sh_symbol">;</span>
    ll r <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">,</span> i<span class="sh_symbol">,</span> j<span class="sh_symbol">;</span>
    <span class="sh_keyword">for</span><span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> n<span class="sh_symbol">;</span> i <span class="sh_symbol">&gt;</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> i <span class="sh_symbol">=</span> j<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
        j <span class="sh_symbol">=</span> <span class="sh_function">next</span><span class="sh_symbol">(</span>n<span class="sh_symbol">,</span> i<span class="sh_symbol">);</span>
        r <span class="sh_symbol">-=</span> <span class="sh_function">calc</span><span class="sh_symbol">(</span>n <span class="sh_symbol">/</span> i<span class="sh_symbol">)</span> <span class="sh_symbol">*</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">-</span> j<span class="sh_symbol">);</span>
    <span class="sh_cbracket">}</span>
    f<span class="sh_symbol">.</span><span class="sh_function">insert</span><span class="sh_symbol">(</span><span class="sh_function">pll</span><span class="sh_symbol">(</span>n<span class="sh_symbol">,</span> r<span class="sh_symbol">));</span>
    <span class="sh_keyword">return</span> r<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span></code></pre>
</template>
