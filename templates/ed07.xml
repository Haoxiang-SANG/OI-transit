<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/bootstrap.simplify.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/sh_typical.min.css"?>

<template>
<title>快速 Fourier 变换 (Fast Fourier Transform)</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_comment">// 'Fast Number Theory Transform' is in memos/12.html.</span>
<span class="sh_keyword">namespace</span> Poly <span class="sh_cbracket">{</span>
	<span class="sh_keyword">typedef</span> std<span class="sh_symbol">::</span>complex <span class="sh_symbol">&lt;</span><span class="sh_type">double</span><span class="sh_symbol">&gt;</span> C<span class="sh_symbol">;</span>

	<span class="sh_keyword">const</span> <span class="sh_type">int</span> N <span class="sh_symbol">=</span> <span class="sh_number">530000</span><span class="sh_symbol">;</span>
	<span class="sh_type">int</span> l<span class="sh_symbol">,</span> n<span class="sh_symbol">,</span> rev<span class="sh_symbol">[</span>N<span class="sh_symbol">];</span>
	<span class="sh_usertype">C</span><span class="sh_normal"> </span>x<span class="sh_symbol">[</span>N<span class="sh_symbol">],</span> y<span class="sh_symbol">[</span>N<span class="sh_symbol">],</span> B1<span class="sh_symbol">[</span>N<span class="sh_symbol">],</span> B2<span class="sh_symbol">[</span>N<span class="sh_symbol">],</span> B3<span class="sh_symbol">[</span>N<span class="sh_symbol">];</span>

	<span class="sh_type">void</span> <span class="sh_function">FFT_init</span><span class="sh_symbol">(</span><span class="sh_type">int</span> len<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
		<span class="sh_keyword">if</span> <span class="sh_symbol">(</span>l <span class="sh_symbol">==</span> len<span class="sh_symbol">)</span> <span class="sh_keyword">return</span><span class="sh_symbol">;</span> n <span class="sh_symbol">=</span> <span class="sh_number">1</span> <span class="sh_symbol">&lt;&lt;</span> <span class="sh_symbol">(</span>l <span class="sh_symbol">=</span> len<span class="sh_symbol">);</span>
		<span class="sh_type">int</span> i<span class="sh_symbol">;</span> <span class="sh_type">double</span> angle <span class="sh_symbol">=</span> M_PI<span class="sh_symbol">;</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> l <span class="sh_symbol">-</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&gt;=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> angle <span class="sh_symbol">*=</span> <span class="sh_symbol">.</span><span class="sh_number">5</span><span class="sh_symbol">,</span> <span class="sh_symbol">--</span>i<span class="sh_symbol">)</span> x<span class="sh_symbol">[</span><span class="sh_number">1</span> <span class="sh_symbol">&lt;&lt;</span> i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_function">C</span><span class="sh_symbol">(</span><span class="sh_function">cos</span><span class="sh_symbol">(</span>angle<span class="sh_symbol">),</span> <span class="sh_function">sin</span><span class="sh_symbol">(</span>angle<span class="sh_symbol">));</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">3</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> <span class="sh_keyword">if</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">&amp;</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">-</span> <span class="sh_number">1</span><span class="sh_symbol">))</span> x<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> x<span class="sh_symbol">[</span>i <span class="sh_symbol">&amp;</span> <span class="sh_symbol">-</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">*</span> x<span class="sh_symbol">[</span>i <span class="sh_symbol">^</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">&amp;</span> <span class="sh_symbol">-</span>i<span class="sh_symbol">)];</span>
		<span class="sh_symbol">*</span>x <span class="sh_symbol">=</span> <span class="sh_function">C</span><span class="sh_symbol">(</span><span class="sh_number">1</span><span class="sh_symbol">.),</span> <span class="sh_symbol">*</span>rev <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> rev<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> rev<span class="sh_symbol">[</span>i <span class="sh_symbol">&gt;&gt;</span> <span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">&gt;&gt;</span> <span class="sh_number">1</span> <span class="sh_symbol">|</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">&amp;</span> <span class="sh_number">1</span><span class="sh_symbol">)</span> <span class="sh_symbol">&lt;&lt;</span> <span class="sh_symbol">(</span>l <span class="sh_symbol">-</span> <span class="sh_number">1</span><span class="sh_symbol">);</span>
	<span class="sh_cbracket">}</span>

	<span class="sh_type">void</span> <span class="sh_function">DFT</span><span class="sh_symbol">(</span><span class="sh_usertype">C</span><span class="sh_normal"> </span><span class="sh_symbol">*</span>d<span class="sh_symbol">,</span> <span class="sh_usertype">C</span><span class="sh_normal"> </span><span class="sh_symbol">*</span>t<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
		<span class="sh_type">int</span> i<span class="sh_symbol">,</span> len <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">,</span> delta <span class="sh_symbol">=</span> n<span class="sh_symbol">;</span> <span class="sh_usertype">C</span><span class="sh_normal"> </span><span class="sh_symbol">*</span>j<span class="sh_symbol">,</span> <span class="sh_symbol">*</span>k<span class="sh_symbol">,</span> R<span class="sh_symbol">;</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> t<span class="sh_symbol">[</span>rev<span class="sh_symbol">[</span>i<span class="sh_symbol">]]</span> <span class="sh_symbol">=</span> d<span class="sh_symbol">[</span>i<span class="sh_symbol">];</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> l<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
			delta <span class="sh_symbol">&gt;&gt;=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span>
			<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>k <span class="sh_symbol">=</span> x<span class="sh_symbol">,</span> j <span class="sh_symbol">=</span> y<span class="sh_symbol">;</span> j <span class="sh_symbol">&lt;</span> y <span class="sh_symbol">+</span> len<span class="sh_symbol">;</span> k <span class="sh_symbol">+=</span> delta<span class="sh_symbol">,</span> <span class="sh_symbol">++</span>j<span class="sh_symbol">)</span> <span class="sh_symbol">*</span>j <span class="sh_symbol">=</span> <span class="sh_symbol">*</span>k<span class="sh_symbol">;</span>
			<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>j <span class="sh_symbol">=</span> t<span class="sh_symbol">;</span> j <span class="sh_symbol">&lt;</span> t <span class="sh_symbol">+</span> n<span class="sh_symbol">;</span> j <span class="sh_symbol">+=</span> len <span class="sh_symbol">&lt;&lt;</span> <span class="sh_number">1</span><span class="sh_symbol">)</span>
				<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>k <span class="sh_symbol">=</span> j<span class="sh_symbol">;</span> k <span class="sh_symbol">&lt;</span> j <span class="sh_symbol">+</span> len<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>k<span class="sh_symbol">)</span>
					R <span class="sh_symbol">=</span> y<span class="sh_symbol">[</span>k <span class="sh_symbol">-</span> j<span class="sh_symbol">]</span> <span class="sh_symbol">*</span> k<span class="sh_symbol">[</span>len<span class="sh_symbol">],</span> k<span class="sh_symbol">[</span>len<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_symbol">*</span>k <span class="sh_symbol">-</span> R<span class="sh_symbol">,</span> <span class="sh_symbol">*</span>k <span class="sh_symbol">+=</span> R<span class="sh_symbol">;</span>
			len <span class="sh_symbol">&lt;&lt;=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span>
		<span class="sh_cbracket">}</span>
	<span class="sh_cbracket">}</span>

	<span class="sh_type">void</span> <span class="sh_function">Mul</span><span class="sh_symbol">(</span><span class="sh_type">int</span> degA<span class="sh_symbol">,</span> <span class="sh_type">int</span> degB<span class="sh_symbol">,</span> <span class="sh_type">double</span> <span class="sh_symbol">*</span>a<span class="sh_symbol">,</span> <span class="sh_type">double</span> <span class="sh_symbol">*</span>b<span class="sh_symbol">,</span> <span class="sh_type">double</span> <span class="sh_symbol">*</span>c<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
		<span class="sh_keyword">if</span> <span class="sh_symbol">(!(</span>degA <span class="sh_symbol">||</span> degB<span class="sh_symbol">))</span> <span class="sh_cbracket">{</span><span class="sh_symbol">*</span>c <span class="sh_symbol">=</span> <span class="sh_symbol">*</span>a <span class="sh_symbol">*</span> <span class="sh_symbol">*</span>b<span class="sh_symbol">;</span> <span class="sh_keyword">return</span><span class="sh_symbol">;</span><span class="sh_cbracket">}</span>
		<span class="sh_function">FFT_init</span><span class="sh_symbol">(</span><span class="sh_function">lg2</span><span class="sh_symbol">(</span>degA <span class="sh_symbol">+</span> degB<span class="sh_symbol">)</span> <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">);</span>
		<span class="sh_type">int</span> i<span class="sh_symbol">;</span> <span class="sh_type">double</span> iv <span class="sh_symbol">=</span> <span class="sh_number">1.0</span> <span class="sh_symbol">/</span> n<span class="sh_symbol">;</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;=</span> degA<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> B1<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_function">C</span><span class="sh_symbol">(</span>a<span class="sh_symbol">[</span>i<span class="sh_symbol">]);</span> std<span class="sh_symbol">::</span><span class="sh_function">fill</span><span class="sh_symbol">(</span>B1 <span class="sh_symbol">+</span> i<span class="sh_symbol">,</span> B1 <span class="sh_symbol">+</span> n<span class="sh_symbol">,</span> <span class="sh_function">C</span><span class="sh_symbol">());</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;=</span> degB<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> B2<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_function">C</span><span class="sh_symbol">(</span>b<span class="sh_symbol">[</span>i<span class="sh_symbol">]);</span> std<span class="sh_symbol">::</span><span class="sh_function">fill</span><span class="sh_symbol">(</span>B2 <span class="sh_symbol">+</span> i<span class="sh_symbol">,</span> B2 <span class="sh_symbol">+</span> n<span class="sh_symbol">,</span> <span class="sh_function">C</span><span class="sh_symbol">());</span>
		<span class="sh_function">DFT</span><span class="sh_symbol">(</span>B1<span class="sh_symbol">,</span> B3<span class="sh_symbol">),</span> <span class="sh_function">DFT</span><span class="sh_symbol">(</span>B2<span class="sh_symbol">,</span> B1<span class="sh_symbol">);</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> B1<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">*=</span> B3<span class="sh_symbol">[</span>i<span class="sh_symbol">];</span>
		<span class="sh_function">DFT</span><span class="sh_symbol">(</span>B1<span class="sh_symbol">,</span> B3<span class="sh_symbol">),</span> std<span class="sh_symbol">::</span><span class="sh_function">reverse</span><span class="sh_symbol">(</span>B3 <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">,</span> B3 <span class="sh_symbol">+</span> n<span class="sh_symbol">);</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;=</span> degA <span class="sh_symbol">+</span> degB<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> c<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> B3<span class="sh_symbol">[</span>i<span class="sh_symbol">].</span><span class="sh_function">real</span><span class="sh_symbol">()</span> <span class="sh_symbol">*</span> iv<span class="sh_symbol">;</span>
	<span class="sh_cbracket">}</span>
<span class="sh_cbracket">}</span></code></pre>
</template>
